---
export const prerender = false;
const { app: appName } = Astro.props;
import ButtonGoogle from "../components/button-google.astro";
---

<section class="bg-gray-50 h-full dark:bg-gray-900">
  <div
    class="flex flex-col items-center justify-center px-6 py-8 mx-auto md:h-screen lg:py-0"
  >
    <div class="flex flex-col items-center justify-center gap-2 mb-6">
      <a
        href="#"
        class="flex items-center text-2xl font-semibold text-gray-900 dark:text-white"
      >
        {appName}
      </a>
    </div>
    <div
      class="w-full bg-white rounded shadow dark:border md:mt-0 sm:max-w-md xl:p-0 dark:bg-gray-800 dark:border-gray-700"
    >
      <div class="p-6 space-y-4 md:space-y-6 sm:p-8">
        <h1
          class="text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white"
        >
          Welcome back
        </h1>

        <div id="message" class="hidden"></div>

        <form id="loginForm" class="space-y-4 md:space-y-6">
          <div>
            <label
              for="email"
              class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
              >Email</label
            >
            <input
              type="email"
              name="email"
              id="email"
              class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded focus:ring-gray-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
              placeholder="name@provider.com"
              required
            />
          </div>
          <div>
            <label
              for="password"
              class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
              >Password</label
            >
            <input
              type="password"
              name="password"
              id="password"
              placeholder="••••••••"
              class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded focus:ring-gray-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
              required
            />
          </div>
          <button
            type="submit"
            id="loginButton"
            class="w-full hover:opacity-75 cursor-pointer text-white bg-black hover:bg-gray-700 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded text-sm px-5 py-3 text-center dark:bg-gray-600 dark:hover:bg-gray-700 dark:focus:ring-gray-800"
            >Login</button
          >
          <ButtonGoogle />
          <p class="text-sm font-light text-gray-500 dark:text-gray-400">
            Don't have an account yet? <a
              href="/register"
              class="font-medium underline text-primary-600 hover:underline dark:text-primary-500"
              >Sign up</a
            >
          </p>
        </form>
      </div>
    </div>
  </div>
  <a href="guimox.dev" class="mt-8 underline">guimox.dev</a>
</section>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const form = document.getElementById("loginForm") as HTMLFormElement;
    const button = document.getElementById("loginButton") as HTMLButtonElement;
    const messageDiv = document.getElementById("message") as HTMLDivElement;

    function showMessage(text: string | null, isError = false) {
      messageDiv.textContent = text;
      messageDiv.className = isError
        ? "p-4 mb-4 text-sm text-red-800 rounded-lg bg-red-50 dark:bg-gray-800 dark:text-red-400"
        : "p-4 mb-4 text-sm text-green-800 rounded-lg bg-green-50 dark:bg-gray-800 dark:text-green-400";
      messageDiv.classList.remove("hidden");
    }

    function hideMessage() {
      messageDiv.classList.add("hidden");
    }

    form!.addEventListener("submit", async function (e) {
      e.preventDefault();

      hideMessage();

      button.disabled = true;
      button.textContent = "Logging in...";

      try {
        const formData = new FormData(form);
        const email = formData.get("email");
        const password = formData.get("password");

        console.log("Attempting login for:", email);

        if (!email || !password) {
          throw new Error("Email and password are required.");
        }

        const result = await fetch("http://localhost:8080/auth/login", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ email, password, app: "guimox" }),
        });

        console.log("API response status:", result.status);

        if (!result.ok) {
          const errorResponse = await result.text();
          console.error(`API Error (${result.status}):`, errorResponse);
          throw new Error(`Login failed: ${errorResponse || "Unknown error"}`);
        }

        const response = await result.json();
        console.log("Login successful:", response);

        showMessage("Login successful! Redirecting...", false);
      } catch (error) {
        console.error("Login error:", error);
        showMessage("error", true);
      } finally {
        button.disabled = false;
        button.textContent = "Login";
      }
    });
  });
</script>
